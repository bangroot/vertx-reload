import java.text.SimpleDateFormat

apply plugin: 'com.jfrog.bintray'

def globalVersion = new Version(currentVersion)
project.version = currentVersion

bintray {
  apiUrl = "https://api.bintray.com"
  user = bintray_user
  key = bintray_key
  configurations = ['published', 'archives']
//  publications = ['published']
//  filesSpec {
//    from 'files'
//    into 'standalone_files/level1'
//    rename '(.+)\\.(.+)', '$1-suffix.$2'
//  }
  publish = false
  pkg {
    repo = 'maven'
    name = project.name
    desc = 'Utility Classes for Vert.x Development'
    websiteUrl = 'https://github.com/bangroot/vertx-utils'
    issueTrackerUrl = 'https://github.com/bangroot/vertx-utils/issues'
    vcsUrl = 'https://github.com/bangroot/vertx-utils.git'
    licenses = ['Apache-2.0']
    labels = ['vertx', 'groovy']
    attributes = ['plat': ['linux', 'osx']]
    publicDownloadNumbers = true
    version {
      name = globalVersion.thisVersion //Optional logical version name
//      desc = 'optional, version-specific description'
//      vcsTag = '1.0'
//      attributes= ['a': ['ay1', 'ay2', 'ay3'], 'b': ['bee'], c: 'cee']
    }
  }
}


class Version {
  String originalVersion
  String thisVersion
  String status
  Date buildTime

  Version(String versionValue) {
    buildTime = new Date()
    originalVersion = versionValue
    if (originalVersion.endsWith('-SNAPSHOT')) {
      status = 'integration'
      thisVersion = originalVersion.substring(0, originalVersion.length() - 'SNAPSHOT'.length()) + getTimestamp()
    } else {
      status = 'release'
      thisVersion = versionValue
    }
  }

  String getTimestamp() {
    // Convert local file timestamp to UTC
    def format = new SimpleDateFormat('yyyyMMddHHmmss')
    format.setCalendar(Calendar.getInstance(TimeZone.getTimeZone('UTC')));
    return format.format(buildTime)
  }

  String toString() {
    thisVersion
  }
}